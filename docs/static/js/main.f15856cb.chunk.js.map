{"version":3,"sources":["hooks/CustomHookComponents.tsx","hooks/store.ts","hooks/UseContextComponent.tsx","hooks/UseEffectComponent.tsx","hooks/UseReducerComponent.tsx","hooks/UseRefComponent.tsx","hooks/UseStateComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomHookComponent","data","url","useState","setDate","done","setDone","useEffect","fetch","then","resp","json","d","useFetchData","portLandTaps","useMemo","filter","bev","producerLocation","includes","length","src","logo","alt","initialState","first","last","context","createContext","ConsumerComponent","user","useContext","UserContext","UseContextComponent","setUser","Provider","value","onClick","UseEffectComponent","setValue","timer","window","setInterval","v","clearInterval","counter","counterReducer","state","action","type","payload","Error","UseReducerComponent","useReducer","dispatch","UseRefComponent","inputRef","useRef","ref","UseStateComponent","arr","setArr","name","setName","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f15856cb.chunk.js","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\r\n\r\nexport interface Beverage {\r\n  name: string;\r\n  producerName: string;\r\n  beverageName: string;\r\n  beverageColor: string;\r\n  beverageStyle: string;\r\n  producerLocation: string;\r\n  abv: number;\r\n  ibu: number;\r\n  logo: string;\r\n  level: number;\r\n}\r\n\r\nconst useFetchData = (\r\n  url: string\r\n): {\r\n  data: Beverage[] | null;\r\n  done: boolean;\r\n} => {\r\n  const [data, setDate] = useState<Beverage[] | null>(null);\r\n  const [done, setDone] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((d: Beverage[]) => {\r\n        setDate(d);\r\n        setDone(true);\r\n      });\r\n  }, [url]);\r\n\r\n  return {\r\n    data,\r\n    done,\r\n  };\r\n};\r\n\r\nconst CustomHookComponent = () => {\r\n  const { data } = useFetchData(\"/hv-taplist.json\");\r\n  const portLandTaps = useMemo(() => \r\n      (data || []).filter(bev => bev.producerLocation.includes(\"Portland\")), [data]\r\n  )\r\n\r\n  return <div>{portLandTaps.length && <img src={portLandTaps![1].logo} alt=\"Beverage logo\" />}</div>;\r\n};\r\n\r\nexport default CustomHookComponent;\r\n","import { createContext } from \"react\";\r\n\r\nconst initialState = {\r\n    first: \"Tony\",\r\n    last: \"Montana\",\r\n};\r\n\r\nexport type UserState = typeof initialState;\r\n\r\nconst context = createContext<typeof initialState>(initialState);\r\n\r\nexport default context;","import { useContext, useState } from \"react\";\r\nimport UserContext, { UserState } from \"./store\";\r\n\r\nconst ConsumerComponent = () => {\r\n  const user = useContext<UserState>(UserContext);\r\n\r\n  return (\r\n    <div>\r\n      <div>First: {user.first}</div>\r\n      <div>Last: {user.last}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UseContextComponent = () => {\r\n  const [user, setUser] = useState<UserState>({\r\n    first: \"Troy\",\r\n    last: \"Bolton\",\r\n  });\r\n\r\n  return (\r\n    <UserContext.Provider value={user}>\r\n      <ConsumerComponent />\r\n      <button\r\n        onClick={() =>\r\n          setUser({\r\n            first: \"Tom\",\r\n            last: \"Holland\",\r\n          })\r\n        }\r\n      >\r\n        Change Context\r\n      </button>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UseContextComponent;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nconst UseEffectComponent = () => {\r\n    \r\n    const [value, setValue] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const timer = window.setInterval(() => {\r\n            setValue(v => v + 1);\r\n        }, 1000);\r\n\r\n        return () => window.clearInterval(timer);\r\n    }, [setValue]);\r\n    \r\n    return (\r\n        <div>\r\n            {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseEffectComponent\r\n","import { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n    counter: 100\r\n}\r\n\r\ntype ACTIONTYPES = \r\n    | { type: 'increment', payload: number }\r\n    | { type: 'decrement', payload: number };\r\n\r\nconst counterReducer = (state: typeof initialState, action: ACTIONTYPES) => {\r\n    switch (action.type) {\r\n        case \"increment\":\r\n            \r\n            return {\r\n                ...state,\r\n                counter: state.counter + action.payload\r\n            }\r\n        \r\n        case \"decrement\":\r\n            \r\n            return {\r\n                ...state,\r\n                counter: state.counter - action.payload\r\n            }\r\n    \r\n        default:\r\n            throw new Error(\"Bad action\");\r\n    }\r\n}\r\n\r\nconst UseReducerComponent = () => {\r\n    const [state, dispatch] = useReducer(counterReducer, initialState);\r\n\r\n    return (\r\n        <div>\r\n            <div>{state.counter}</div>\r\n            <div>\r\n                <button onClick={() => dispatch({\r\n                    type: 'increment',\r\n                    payload: 10\r\n                })}>Increment</button>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => dispatch({\r\n                    type: 'decrement',\r\n                    payload: 5\r\n                })}>Decrement</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducerComponent","import { useRef } from 'react';\r\n\r\nconst UseRefComponent = () => {\r\n\r\n    const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    return (\r\n        <input type=\"text\" ref={inputRef} />\r\n    )\r\n}\r\n\r\nexport default UseRefComponent;","import React, { useState } from \"react\";\r\n\r\nconst UseStateComponent = () => {\r\n  const [arr, setArr] = useState<number[]>([]);\r\n\r\n  const [name, setName] = useState<string | null>(null);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setArr([...arr, arr.length + 1])}>\r\n          Add to array\r\n        </button>\r\n        {JSON.stringify(arr)}\r\n      </div>\r\n      <div>\r\n        <button onClick={() => setName(\"Jhon\")}>\r\n          Add to name\r\n        </button>\r\n        {JSON.stringify(name)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseStateComponent;\r\n","import React from 'react';\nimport './App.css';\nimport CustomHookComponent from './hooks/CustomHookComponents';\nimport UseContextComponent from './hooks/UseContextComponent';\nimport UseEffectComponent from './hooks/UseEffectComponent';\nimport UseReducerComponent from './hooks/UseReducerComponent';\nimport UseRefComponent from './hooks/UseRefComponent';\nimport UseStateComponent from './hooks/UseStateComponent';\n\nfunction App() {\n  return (\n    <div>\n      <h1>useState</h1>\n      <UseStateComponent />\n      <hr />\n      <h1>useEffect</h1>\n      <UseEffectComponent />\n      <hr />\n      <h1>useContext</h1>\n      <UseContextComponent />\n      <hr />\n      <h1>useReducer</h1>\n      <UseReducerComponent />\n      <hr />\n      <h1>useRef</h1>\n      <UseRefComponent />\n      <hr />\n      <h1>CustomHook</h1>\n      <CustomHookComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}